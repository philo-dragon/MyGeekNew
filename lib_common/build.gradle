apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.targetSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (variant.buildType.name == 'release') {
                def fileName = "Demo_v${defaultConfig.versionName}_${releaseTime()}_release.apk"
                if (variant.flavorName == "beijing") {
                    fileName = "Demo_v${defaultConfig.versionName}_${releaseTime()}_beijing_release.apk"
                } else if (variant.flavorName == "shandong") {
                    fileName = "Demo_v${defaultConfig.versionName}_${releaseTime()}_shandong_release.apk"
                }
                output.outputFile = new File(outputFile.parent, fileName)
            } else if (variant.buildType.name == 'debug') {
                def fileName = "Demo_v${defaultConfig.versionName}_${releaseTime()}_debug.apk"
                if (variant.flavorName == "beijing") {
                    fileName = "Demo_v${defaultConfig.versionName}_${releaseTime()}_beijing_debug.apk"
                } else if (variant.flavorName == "shandong") {
                    fileName = "Demo_v${defaultConfig.versionName}_${releaseTime()}_shandong_debug.apk"
                }
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    api rootProject.ext.testLibs
    api rootProject.ext.supportLibs
    api rootProject.ext.retrofitLibs
    api rootProject.ext.okHttpLibs
    api rootProject.ext.rxJavaLibs
    api rootProject.ext.commonLibs

    annotationProcessor rootProject.ext.annotationProcessorLibs
}
